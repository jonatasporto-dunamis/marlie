# =============================================================================
# DESAMBIGUA√á√ÉO ORIENTADA POR CAT√ÅLOGO - MARLIE BOT
# =============================================================================
# Extens√£o da m√°quina de estados para resolver entradas amb√≠guas usando
# popularidade dos servi√ßos baseada em agendamentos dos √∫ltimos 30 dias.
#
# Version: 1.0
# Language: pt-BR
# Integration: Complementa state-machine-config.yaml

module:
  name: "catalog-disambiguation"
  version: "1.0"
  language: "pt-BR"
  description: >
    Resolve entradas amb√≠guas de servi√ßos usando dados de popularidade do cat√°logo local,
    apresentando top-3 op√ß√µes numeradas para sele√ß√£o r√°pida pelo usu√°rio.

# -----------------------------------------------------------------------------
# PADR√ïES NLP PARA DETEC√á√ÉO DE AMBIGUIDADE
# -----------------------------------------------------------------------------

nlp:
  patterns:
    # Aceita apenas n√∫meros de 1 a 3
    numeric_1_3:
      - '^\s*[1-3]\s*$'
    
    # Categorias que requerem desambigua√ß√£o
    category_ambiguous:
      - '(?i)\bcabelo(s)?\b'
      - '(?i)\b(unha|manicure|pedicure)\b'
      - '(?i)\bsobrancelh(a|as)\b'
      - '(?i)\bmaquiagem\b'
      - '(?i)\bescova(s)?\b'
      - '(?i)\btratamento capilar\b'
      - '(?i)\bmechas?\b'
      - '(?i)\bluzes?\b'
      - '(?i)\bprogressiva\b'
      - '(?i)\brelaxamento\b'
      - '(?i)\bcorte\b'
      - '(?i)\bpintura\b'
      - '(?i)\bhidrata[√ßc][√£a]o\b'
      - '(?i)\bmassagem\b'
      - '(?i)\blimpeza de pele\b'
      - '(?i)\bdesign\b'
      - '(?i)\bdepila[√ßc][√£a]o\b'
    
    # Termos que indicam busca espec√≠fica (n√£o amb√≠gua)
    specific_service:
      - '(?i)\bcorte de cabelo masculino\b'
      - '(?i)\bescova progressiva\b'
      - '(?i)\bmechas/luzes\b'
      - '(?i)\bmanicure e pedicure\b'
      - '(?i)\bdesign de sobrancelha\b'
      - '(?i)\bmaquiagem para festa\b'
    
    # Stop words para limpeza
    stop_words:
      - '(?i)\b(quero|gostaria|preciso|fazer|marcar)\b'
      - '(?i)\b(um|uma|o|a|de|da|do|para|com)\b'
      - '(?i)\b(por favor|pfv|obrigad[ao])\b'

# -----------------------------------------------------------------------------
# TEMPLATES DE RESPOSTA
# -----------------------------------------------------------------------------

responses:
  # Template para apresentar top-3 op√ß√µes
  top3_prompt: |
    Encontrei estas op√ß√µes mais populares dos √∫ltimos 30 dias:
    
    1Ô∏è‚É£ **{{top3.0.nome}}** ‚Äî {{top3.0.duracao}}min ‚Äî R$ {{top3.0.preco}}
    2Ô∏è‚É£ **{{top3.1.nome}}** ‚Äî {{top3.1.duracao}}min ‚Äî R$ {{top3.1.preco}}
    3Ô∏è‚É£ **{{top3.2.nome}}** ‚Äî {{top3.2.duracao}}min ‚Äî R$ {{top3.2.preco}}
    
    Responda com **1**, **2** ou **3**. üî¢
  
  # Template quando h√° menos de 3 op√ß√µes
  top2_prompt: |
    Encontrei estas op√ß√µes populares:
    
    1Ô∏è‚É£ **{{top3.0.nome}}** ‚Äî {{top3.0.duracao}}min ‚Äî R$ {{top3.0.preco}}
    2Ô∏è‚É£ **{{top3.1.nome}}** ‚Äî {{top3.1.duracao}}min ‚Äî R$ {{top3.1.preco}}
    
    Responda com **1** ou **2**. üî¢
  
  # Template para apenas 1 op√ß√£o
  single_option: |
    Encontrei esta op√ß√£o:
    
    ‚úÖ **{{top3.0.nome}}** ‚Äî {{top3.0.duracao}}min ‚Äî R$ {{top3.0.preco}}
    
    Confirma este servi√ßo? Responda **sim** ou **n√£o**.
  
  # Erro de escolha inv√°lida
  invalid_choice: |
    ‚ùå N√£o entendi sua escolha.
    
    Responda com **1**, **2** ou **3** para selecionar uma das op√ß√µes acima.
  
  # Confirma√ß√£o de sele√ß√£o
  persisted_ok: |
    ‚úÖ Perfeito! Anotei **{{slots.service_name}}** para seguirmos.
    
    Agora vamos encontrar um hor√°rio dispon√≠vel! üìÖ
  
  # Quando n√£o h√° op√ß√µes dispon√≠veis
  no_options: |
    üòî N√£o encontrei op√ß√µes dispon√≠veis para "{{input.text}}".
    
    Tente ser mais espec√≠fico ou escolha uma categoria:
    ‚Ä¢ Cabelo (corte, escova, progressiva)
    ‚Ä¢ Unhas (manicure, pedicure)
    ‚Ä¢ Sobrancelha (design, henna)
    ‚Ä¢ Est√©tica (limpeza de pele, massagem)
  
  # Fallback para erro no cat√°logo
  catalog_error: |
    ‚ö†Ô∏è Estou com dificuldades para acessar o cat√°logo no momento.
    
    Voc√™ pode me dizer exatamente qual servi√ßo deseja agendar?

# -----------------------------------------------------------------------------
# M√ÅQUINA DE ESTADOS PARA DESAMBIGUA√á√ÉO
# -----------------------------------------------------------------------------

state_machine:
  states:
    # Estado principal de desambigua√ß√£o
    CATALOG_DISAMBIGUATION:
      description: "Resolve entradas amb√≠guas com base em popularidade (30d)"
      
      on_enter:
        # Normalizar entrada do usu√°rio
        - set:
            cat_norm: "{{normalize_servico_nome(input.text || slots.category || '')}}"
            original_input: "{{input.text}}"
        
        # Verificar se √© categoria amb√≠gua ou busca espec√≠fica
        - if: "{{nlp.match(patterns.category_ambiguous, input.text)}}"
          then:
            # Buscar por categoria
            - tool: "db.topn_by_category_30d"
              args:
                categoria_norm: "{{cat_norm}}"
                n: 3
              save_as: "top3"
              on_error:
                - reply: { template: "catalog_error" }
                - transition: "FALLBACK_MANUAL_INPUT"
          else:
            # Busca textual livre
            - tool: "db.search_like"
              args:
                term_norm: "{{cat_norm}}"
                n: 3
                similarity_threshold: 0.3
              save_as: "top3"
              on_error:
                - reply: { template: "catalog_error" }
                - transition: "FALLBACK_MANUAL_INPUT"
        
        # Apresentar op√ß√µes baseado na quantidade encontrada
        - if: "{{top3.length == 0}}"
          then:
            - reply: { template: "no_options" }
            - transition: "FALLBACK_MANUAL_INPUT"
          elif: "{{top3.length == 1}}"
          then:
            - reply: { template: "single_option" }
            - transition: "CATALOG_WAIT_CONFIRMATION"
          elif: "{{top3.length == 2}}"
          then:
            - reply: { template: "top2_prompt" }
            - transition: "CATALOG_WAIT_CHOICE"
          else:
            - reply: { template: "top3_prompt" }
            - transition: "CATALOG_WAIT_CHOICE"
    
    # Aguarda escolha num√©rica (1-3)
    CATALOG_WAIT_CHOICE:
      description: "Aguarda sele√ß√£o num√©rica do usu√°rio"
      
      on_user_message:
        - if: "{{nlp.match(patterns.numeric_1_3, input.text)}}"
          then:
            # Processar escolha v√°lida
            - set:
                idx: "{{to_int(trim(input.text)) - 1}}"
            
            # Verificar se √≠ndice √© v√°lido
            - if: "{{idx < top3.length}}"
              then:
                - set:
                    choice: "{{top3[idx]}}"
                
                # Persistir sele√ß√£o nos slots
                - set_slots:
                    service_id: "{{choice.servicoid}}"
                    service_name: "{{choice.nomeservico}}"
                    service_norm: "{{choice.nomeservico_normalizado}}"
                    professional_id: "{{choice.profissionalid}}"
                    service_price: "{{choice.preco}}"
                    service_duration: "{{choice.duracao}}"
                    category: "{{choice.categoria}}"
                
                # Confirmar sele√ß√£o
                - reply: { template: "persisted_ok" }
                
                # Registrar m√©trica
                - metric:
                    name: "catalog_numeric_choices_total"
                    labels: { index: "{{idx + 1}}" }
                    increment: 1
                
                # Retornar ao fluxo principal
                - transition: "RETURN_TO_FLOW"
              else:
                - reply: { template: "invalid_choice" }
                - stay: true
          else:
            # Escolha inv√°lida
            - reply: { template: "invalid_choice" }
            - stay: true
    
    # Aguarda confirma√ß√£o para op√ß√£o √∫nica
    CATALOG_WAIT_CONFIRMATION:
      description: "Aguarda confirma√ß√£o sim/n√£o para op√ß√£o √∫nica"
      
      on_user_message:
        - if: "{{nlp.match(patterns.affirmative, input.text)}}"
          then:
            # Confirmar op√ß√£o √∫nica
            - set:
                choice: "{{top3[0]}}"
            
            # Persistir sele√ß√£o nos slots
            - set_slots:
                service_id: "{{choice.servicoid}}"
                service_name: "{{choice.nomeservico}}"
                service_norm: "{{choice.nomeservico_normalizado}}"
                professional_id: "{{choice.profissionalid}}"
                service_price: "{{choice.preco}}"
                service_duration: "{{choice.duracao}}"
                category: "{{choice.categoria}}"
            
            # Confirmar sele√ß√£o
            - reply: { template: "persisted_ok" }
            
            # Retornar ao fluxo principal
            - transition: "RETURN_TO_FLOW"
          
          elif: "{{nlp.match(patterns.negative, input.text)}}"
          then:
            # Rejeitar e pedir entrada manual
            - reply: { template: "no_options" }
            - transition: "FALLBACK_MANUAL_INPUT"
          
          else:
            # Resposta inv√°lida
            - reply:
                text: "Por favor, responda **sim** para confirmar ou **n√£o** para escolher outro servi√ßo."
            - stay: true
    
    # Fallback para entrada manual
    FALLBACK_MANUAL_INPUT:
      description: "Coleta entrada manual quando cat√°logo falha"
      
      on_enter:
        - reply:
            text: |
              üìù Me diga exatamente qual servi√ßo voc√™ gostaria de agendar.
              
              Exemplo: "Corte de cabelo masculino" ou "Manicure e pedicure"
      
      on_user_message:
        # Aceitar qualquer entrada como servi√ßo manual
        - set_slots:
            service_name: "{{trim(input.text)}}"
            service_norm: "{{normalize_servico_nome(input.text)}}"
            manual_service: true
        
        - reply:
            text: "‚úÖ Anotei **{{slots.service_name}}**. Vamos encontrar um hor√°rio!"
        
        - transition: "RETURN_TO_FLOW"
    
    # Estado de retorno ao fluxo principal
    RETURN_TO_FLOW:
      description: "Retorna ao estado anterior da m√°quina principal"
      
      on_enter:
        # Determinar pr√≥ximo estado baseado no contexto
        - if: "{{context.return_state}}"
          then:
            - transition: "{{context.return_state}}"
          else:
            # Padr√£o: ir para valida√ß√£o de disponibilidade
            - transition: "VALIDATE_BEFORE_CONFIRM"

# -----------------------------------------------------------------------------
# CONFIGURA√á√ïES DE UX
# -----------------------------------------------------------------------------

ux:
  lists:
    numbered_short: true
    accept_numeric_only: [1, 2, 3]
    max_options: 3
    show_price: true
    show_duration: true
    currency_symbol: "R$"
  
  persistence:
    slots_to_keep:
      - service_id
      - service_name
      - service_norm
      - professional_id
      - service_price
      - service_duration
      - category
      - manual_service
    
    reuse_on_next_turn: true
    clear_on_new_session: false
  
  fallbacks:
    max_disambiguation_attempts: 2
    fallback_to_manual: true
    preserve_original_input: true

# -----------------------------------------------------------------------------
# M√âTRICAS E OBSERVABILIDADE
# -----------------------------------------------------------------------------

observability:
  prometheus:
    http_endpoint: "/metrics"
    labels:
      app: "marlie"
      component: "catalog-disambiguation"
    
    counters:
      - name: "catalog_sync_upserts_total"
        help: "Registros upsertados no cat√°logo"
        labels: ["source"]
      
      - name: "catalog_sync_duplicates_avoided_total"
        help: "Conflitos ON CONFLICT evitados (idempot√™ncia)"
      
      - name: "catalog_disambig_prompts_total"
        help: "Quantas vezes a lista top-3 foi apresentada"
        labels: ["category", "options_count"]
      
      - name: "catalog_numeric_choices_total"
        help: "Respostas 1‚Äì3 recebidas"
        labels: ["index"]
      
      - name: "catalog_choice_persisted_total"
        help: "Sele√ß√µes persistidas em slots"
        labels: ["source"]  # "catalog" ou "manual"
      
      - name: "catalog_fallback_manual_total"
        help: "Vezes que fallback manual foi usado"
        labels: ["reason"]  # "no_options", "error", "user_rejection"
    
    gauges:
      - name: "catalog_last_watermark_seconds"
        help: "Segundos desde √∫ltimo watermark processado"
      
      - name: "catalog_available_services_count"
        help: "N√∫mero total de servi√ßos dispon√≠veis no cat√°logo"
    
    summaries:
      - name: "catalog_search_match_ratio"
        help: "Raz√£o (0‚Äì1) de top-N local vs interface humana"
      
      - name: "catalog_disambiguation_duration_seconds"
        help: "Tempo gasto no processo de desambigua√ß√£o"
  
  goals:
    - name: "daily_diff_zero"
      description: "Diff di√°rio vazio (sem fantasmas/duplicatas)"
      target: "< 1% discrepancy"
    
    - name: "topn_parity"
      description: "Busca por termo retorna o mesmo top-N da interface humana"
      target: "> 90% match ratio"
    
    - name: "clarification_efficiency"
      description: "< 5% de idas-e-voltas para clarificar servi√ßo em 100 conversas"
      target: "< 5% fallback rate"
    
    - name: "user_satisfaction"
      description: "Usu√°rios encontram servi√ßo desejado rapidamente"
      target: "< 2 turnos m√©dios para sele√ß√£o"

# -----------------------------------------------------------------------------
# TESTES DE ACEITA√á√ÉO
# -----------------------------------------------------------------------------

acceptance_tests:
  - name: "sync_idempotent"
    description: "Sincroniza√ß√£o deve ser idempotente"
    arrange:
      watermark: "2025-01-01T00:00:00Z"
      pages: 3
    assert:
      counters_change:
        catalog_sync_upserts_total: "> 0"
        catalog_sync_duplicates_avoided_total: ">= 0"
  
  - name: "daily_diff_empty"
    description: "Relat√≥rio di√°rio deve estar vazio em condi√ß√µes normais"
    arrange:
      as_of_date: "2025-09-04"
    assert:
      diff_report: "no_diffs"
  
  - name: "disambig_top3_offers_numeric"
    description: "Entrada amb√≠gua deve apresentar op√ß√µes numeradas"
    input: "cabelo"
    expect_reply_contains: ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£"]
    expect_state: "CATALOG_WAIT_CHOICE"
  
  - name: "numeric_choice_persists"
    description: "Escolha num√©rica deve persistir nos slots"
    input_sequence: ["cabelo", "2"]
    assert_slots:
      service_id: "not_null"
      service_name: "not_empty"
      service_norm: "not_empty"
    expect_reply_contains: ["Perfeito! Anotei"]
  
  - name: "single_option_confirmation"
    description: "Op√ß√£o √∫nica deve pedir confirma√ß√£o"
    input: "design de sobrancelha"
    expect_reply_contains: ["Confirma este servi√ßo?"]
    expect_state: "CATALOG_WAIT_CONFIRMATION"
  
  - name: "no_options_fallback"
    description: "Sem op√ß√µes deve ativar fallback manual"
    input: "servi√ßo inexistente xyz"
    expect_reply_contains: ["N√£o encontrei op√ß√µes"]
    expect_state: "FALLBACK_MANUAL_INPUT"
  
  - name: "invalid_choice_retry"
    description: "Escolha inv√°lida deve permitir nova tentativa"
    input_sequence: ["cabelo", "5"]
    expect_reply_contains: ["N√£o entendi sua escolha"]
    expect_state: "CATALOG_WAIT_CHOICE"
  
  - name: "fallback_manual_accepts_any"
    description: "Fallback manual deve aceitar qualquer entrada"
    input_sequence: ["xyz", "Corte masculino degrad√™"]
    assert_slots:
      service_name: "Corte masculino degrad√™"
      manual_service: true
    expect_reply_contains: ["Anotei"]

# -----------------------------------------------------------------------------
# CONFIGURA√á√ïES DE INTEGRA√á√ÉO
# -----------------------------------------------------------------------------

integration:
  # Integra√ß√£o com m√°quina de estados principal
  state_machine:
    entry_points:
      - from_state: "VALIDATE_BEFORE_CONFIRM"
        condition: "{{nlp.match(patterns.category_ambiguous, input.text)}}"
        target_state: "CATALOG_DISAMBIGUATION"
      
      - from_state: "COLLECT_SERVICE"
        condition: "{{nlp.match(patterns.category_ambiguous, slots.service_name)}}"
        target_state: "CATALOG_DISAMBIGUATION"
    
    return_points:
      - to_state: "VALIDATE_BEFORE_CONFIRM"
        condition: "{{slots.service_id != null}}"
      
      - to_state: "COLLECT_SERVICE"
        condition: "{{slots.manual_service == true}}"
  
  # Integra√ß√£o com cat√°logo
  catalog:
    required_tables:
      - "servicos_prof"
      - "sync_watermarks"
    
    required_functions:
      - "normalize_servico_nome"
      - "topn_by_category_30d"
      - "search_like"
    
    cache_strategy:
      enabled: true
      ttl_seconds: 300  # 5 minutos
      key_prefix: "disambig:"

# -----------------------------------------------------------------------------
# NOTAS DE IMPLEMENTA√á√ÉO
# -----------------------------------------------------------------------------

notes:
  implementation:
    - "Normalize e √≠ndices conforme README; garanta ON CONFLICT (profissionalid,servicoid)."
    - "Popularidade de 30d pode vir de contagem de agendamentos (Trinks) ou tabela local de bookings."
    - "Se pre√ßo/dura√ß√£o inexistentes, exiba '‚Äî' ou omita com fallback elegante."
    - "Implementar cache Redis para consultas frequentes de top-N."
    - "Logs estruturados para debugging e m√©tricas de performance."
  
  performance:
    - "√çndices GIN para busca textual eficiente."
    - "Cache de resultados para categorias populares."
    - "Timeout de 5s para consultas ao cat√°logo."
    - "Fallback graceful em caso de erro de BD/Redis."
  
  ux:
    - "M√°ximo 3 op√ß√µes para n√£o sobrecarregar usu√°rio."
    - "Emojis e formata√ß√£o para melhor legibilidade."
    - "Confirma√ß√£o clara da sele√ß√£o antes de prosseguir."
    - "Fallback manual sempre dispon√≠vel."
  
  monitoring:
    - "M√©tricas Prometheus para observabilidade."
    - "Alertas para taxa de fallback > 10%."
    - "Dashboard para acompanhar efic√°cia da desambigua√ß√£o."
    - "Logs de auditoria para an√°lise de padr√µes de uso."