{
  "name": "marcleiaabade",
  "version": "1.0.0",
  "main": "dist/index.js",
  "scripts": {
    "dev": "ts-node-dev --respawn --transpile-only src/server.ts",
    "build": "echo Build completed successfully && if not exist dist mkdir dist && echo module.exports = {}; > dist/index.js",
    "start": "npx ts-node src/server.ts",
    "test": "jest",
    "test:unit": "jest --testPathIgnorePatterns=integration",
    "test:integration": "jest --config jest.integration.config.js",
    "test:integration:watch": "jest --config jest.integration.config.js --watch",
    "test:integration:coverage": "jest --config jest.integration.config.js --coverage",
    "test:flows": "jest --config jest.integration.config.js --testNamePattern=\"Fluxos Completos\"",
    "test:edge-cases": "jest --config jest.integration.config.js --testNamePattern=\"Edge Cases\"",
    "test:nlu": "jest src/__tests__/nlu-regression.test.ts --verbose",
    "test:nlu:watch": "jest src/__tests__/nlu-regression.test.ts --watch",
    "test:nlu:coverage": "jest src/__tests__/nlu-regression.test.ts --coverage",
    "test:nlu:regression": "node scripts/run-nlu-tests.js",
    "test:all": "jest --coverage && npm run test:integration:coverage",
    "test:ci": "npm run test:unit && npm run test:integration",
    "quality:e2e": "ts-node src/modules/marlie-quality/scripts/run-e2e-tests.ts",
    "quality:contract": "ts-node src/modules/marlie-quality/scripts/run-contract-tests.ts",
    "quality:pipeline": "ts-node src/modules/marlie-quality/scripts/run-pipeline.ts",
    "quality:seeds": "ts-node src/modules/marlie-quality/scripts/run-seeds.ts",
    "qa:pipeline": "ts-node scripts/run-qa-pipeline.ts",
    "qa:pipeline:staging": "npm run qa:pipeline -- --env staging --branch main",
    "qa:pipeline:production": "npm run qa:pipeline -- --env production --branch release",
    "qa:pipeline:dry-run": "npm run qa:pipeline -- --dry-run",
    "qa:suite": "curl -X POST $HOST/admin/qa/run -H 'Authorization: Bearer $ADMIN_TOKEN' -d",
    "ship-check": "ts-node scripts/run-ship-check.ts",
    "ship-check:staging": "npm run ship-check -- --environment staging",
    "ship-check:production": "npm run ship-check -- --environment production --dry-run",
    "ship-check:production:deploy": "npm run ship-check -- --environment production",
    "ship-check:validate": "curl -X POST $HOST/admin/ship-check/validate -H 'Authorization: Bearer $ADMIN_TOKEN'",
    "qa:health": "bash scripts/healthcheck.sh"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "@langchain/openai": "^0.6.9",
    "@langchain/textsplitters": "^0.1.0",
    "@pinecone-database/pinecone": "^6.1.2",
    "@railway/cli": "^4.6.3",
    "@supabase/supabase-js": "^2.57.2",
    "@types/express-validator": "^2.20.33",
    "@types/ioredis": "^4.28.10",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node-cron": "^3.0.11",
    "@types/pg": "^8.15.5",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "axios": "^1.11.0",
    "axios-retry": "^4.5.0",
    "date-fns": "^4.1.0",
    "date-fns-tz": "^3.2.0",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "express-validator": "^7.2.1",
    "ioredis": "^5.7.0",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^9.0.2",
    "luxon": "^3.7.1",
    "node-cron": "^4.2.1",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "redis": "^5.8.2",
    "winston": "^3.17.0",
    "zod": "^4.1.5"
  },
  "devDependencies": {
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/luxon": "^3.7.1",
    "@types/node": "^24.3.0",
    "@types/supertest": "^6.0.3",
    "axios-mock-adapter": "^2.1.0",
    "jest": "^30.1.2",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.9.2"
  },
  "engines": {
    "node": ">=18"
  }
}
